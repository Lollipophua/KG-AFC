import py2neo
from py2neo import Node, Graph, Relationship
import csv

graph = Graph('http://localhost:7474', auth=('neo4j', 'Kk555203!'))
graph.delete_all()
with open('F:\\feature_all.csv', 'r', encoding='utf-8') as f:
    reader = csv.reader(f)
    data = list(reader)
    print('data over!')

#for i in range(1, len(data)):
for i in range(1, 2):
    sig = Node('Entity0', Group_num=data[i][0], name='RF signal', data=data[i][1])
    feature_t = Node('Entity1', name='time domain features', data=data[i][2])
    feature_f = Node('Entity2', name='frequency domain features', data=data[i][3])
    feature_p = Node('Entity3', name='spectral kurtosis features', data=data[i][60])

    max1 = Node('Attribute1', name='max1', data=data[i][4])
    min1 = Node('Attribute2', name='min1', data=data[i][5])
    mean1 = Node('Attribute3', name='mean1', data=data[i][6])
    med1 = Node('Attribute4', name='med1', data=data[i][7])
    peak1 = Node('Attribute5', name='peak1', data=data[i][8])
    arv1 = Node('Attribute6', name='arv1', data=data[i][9])
    var1 = Node('Attribute7', name='var1', data=data[i][10])
    std1 = Node('Attribute8', name='std1', data=data[i][11])
    kur1 = Node('Attribute9', name='kur1', data=data[i][12])
    skew1 = Node('Attribute10', name='skew1', data=data[i][13])
    rms1 = Node('Attribute11', name='rms1', data=data[i][14])
    rs1 = Node('Attribute12', name='rs1', data=data[i][15])
    rmsa1 = Node('Attribute13', name='rmsa1', data=data[i][16])
    waveform1 = Node('Attribute14', name='waveform1', data=data[i][17])
    peakf1 = Node('Attribute15', name='peakf1', data=data[i][18])
    impulsef1 = Node('Attribute16', name='impulsef1', data=data[i][19])
    clearancef1 = Node('Attribute17', name='clearancef1', data=data[i][20])
    fc1 = Node('Attribute18', name='fc1', data=data[i][21])
    msf1 = Node('Attribute19', name='msf1', data=data[i][22])
    rmsf1 = Node('Attribute20', name='rmsf1', data=data[i][23])
    vf1 = Node('Attribute21', name='vf1', data=data[i][24])
    rvf1 = Node('Attribute22', name='rvf1', data=data[i][25])
    skmean1 = Node('Attribute23', name='skmean1', data=data[i][26])
    skstd1 = Node('Attribute24', name='skstd1', data=data[i][27])
    skskew1 = Node('Attribute25', name='skskew1', data=data[i][28])
    skkur1 = Node('Attribute26', name='skkur1', data=data[i][29])


    max2 = Node('Attribute1', name='max2', data=data[i][30])
    min2 = Node('Attribute2', name='min2', data=data[i][31])
    mean2 = Node('Attribute3', name='mean2', data=data[i][32])
    med2 = Node('Attribute4', name='med2', data=data[i][33])
    peak2 = Node('Attribute5', name='peak2', data=data[i][34])
    arv2 = Node('Attribute6', name='arv2', data=data[i][35])
    var2 = Node('Attribute7', name='var2', data=data[i][36])
    std2 = Node('Attribute8', name='std2', data=data[i][37])
    kur2 = Node('Attribute9', name='kur2', data=data[i][38])
    skew2 = Node('Attribute10', name='skew2', data=data[i][39])
    rms2 = Node('Attribute11', name='rms2', data=data[i][40])
    rs2 = Node('Attribute12', name='rs2', data=data[i][41])
    rmsa2 = Node('Attribute13', name='rmsa2', data=data[i][42])
    waveform2 = Node('Attribute14', name='waveform2', data=data[i][43])
    peakf2 = Node('Attribute15', name='peakf2', data=data[i][44])
    impulsef2 = Node('Attribute16', name='impulsef2', data=data[i][45])
    clearancef2 = Node('Attribute17', name='clearancef2', data=data[i][46])
    fc2 = Node('Attribute18', name='fc2', data=data[i][47])
    msf2 = Node('Attribute19', name='msf2', data=data[i][48])
    rmsf2 = Node('Attribute20', name='rmsf2', data=data[i][49])
    vf2 = Node('Attribute21', name='vf2', data=data[i][50])
    rvf2 = Node('Attribute22', name='rvf2', data=data[i][51])
    skmean2 = Node('Attribute23', name='skmean2', data=data[i][52])
    skstd2 = Node('Attribute24', name='skstd2', data=data[i][53])
    skskew2 = Node('Attribute25', name='skskew2', data=data[i][54])
    skkur2 = Node('Attribute26', name='skkur2', data=data[i][55])


    C40 = Node('Attribute27', name='C40', data=data[i][56])
    C41 = Node('Attribute27', name='C41', data=data[i][57])
    C42 = Node('Attribute27', name='C42', data=data[i][58])
    C60 = Node('Attribute27', name='C60', data=data[i][59])

    graph.create(sig)
    graph.create(feature_t)
    graph.create(feature_f)

    graph.create(mean1)
    graph.create(mean2)
    graph.create(var1)
    graph.create(var2)
    graph.create(C40)
    graph.create(C41)
    graph.create(C42)
    graph.create(C60)
    graph.create(max1)
    graph.create(max2)
    graph.create(min1)
    graph.create(min2)
    graph.create(med1)
    graph.create(med2)
    graph.create(peak1)
    graph.create(peak2)
    graph.create(arv1)
    graph.create(arv2)
    graph.create(std1)
    graph.create(std2)
    graph.create(kur1)
    graph.create(kur2)
    graph.create(skew1)
    graph.create(skew2)
    graph.create(rms1)
    graph.create(rms2)
    graph.create(rs1)
    graph.create(rs2)
    graph.create(rmsa1)
    graph.create(rmsa2)
    graph.create(waveform1)
    graph.create(waveform2)
    graph.create(peakf1)
    graph.create(peakf2)
    graph.create(impulsef1)
    graph.create(impulsef2)
    graph.create(clearancef1)
    graph.create(clearancef2)

    graph.create(fc1)
    graph.create(fc2)
    graph.create(msf1)
    graph.create(msf2)
    graph.create(rmsf1)
    graph.create(rmsf2)
    graph.create(vf1)
    graph.create(vf2)
    graph.create(rvf1)
    graph.create(rvf2)
    graph.create(skmean1)
    graph.create(skmean2)
    graph.create(skstd1)
    graph.create(skstd2)
    graph.create(skskew1)
    graph.create(skskew2)
    graph.create(skkur1)
    graph.create(skkur2)

    r1 = Relationship(sig, "time domain features", feature_t)
    r2 = Relationship(sig, 'frequency domain features', feature_f)
    r3 = Relationship(sig, 'spectral kurtosis features', feature_p)
    graph.create(r1)
    graph.create(r2)
    graph.create(r3)

    r4 = Relationship(feature_t, "mean:real part", mean1)
    r5 = Relationship(feature_t, 'mean:imag part', mean2)
    r6 = Relationship(feature_t, 'variance:real part', var1)
    r7 = Relationship(feature_t, 'variance:imag part', var2)
    r8 = Relationship(feature_t, 'fourth-order cumulant C40', C40)
    r9 = Relationship(feature_t, 'fourth-order cumulant C41', C41)
    r10 = Relationship(feature_t, 'fourth-order cumulant C42', C42)
    r11 = Relationship(feature_t, 'sixth-order cumulant C60', C60)
    r12 = Relationship(feature_t, 'maximum:real part', max1)
    r13 = Relationship(feature_t, 'maximum:imag part', max2)
    r14 = Relationship(feature_t, 'median:real part', med1)
    r15 = Relationship(feature_t, 'median:imag part', med2)
    r16 = Relationship(feature_t, 'peak-to-peak:real part', peak1)
    r17 = Relationship(feature_t, 'peak-to-peak:imag part', peak2)
    r18 = Relationship(feature_t, 'rectified mean value:real part', arv1)
    r19 = Relationship(feature_t, 'rectified mean value:imag part', arv2)
    r20 = Relationship(feature_t, 'standard deviation:real part', std1)
    r21 = Relationship(feature_t, 'standard deviation:imag part', std2)
    r22 = Relationship(feature_t, 'skewness:real part', skew1)
    r23 = Relationship(feature_t, 'skewness:imag part', skew2)
    r24 = Relationship(feature_t, 'root-mean-square:real part', rms1)
    r25 = Relationship(feature_t, 'root-mean-square:imag part', rms2)
    r26 = Relationship(feature_t, 'mean square value:real part', rs1)
    r27 = Relationship(feature_t, 'mean square value:imag part', rs2)
    r28 = Relationship(feature_t, 'root-mean-square amplitude:real part', rmsa1)
    r29 = Relationship(feature_t, 'root-mean-square amplitude:imag part', rmsa2)
    r30 = Relationship(feature_t, 'waveform factor:real part', waveform1)
    r31 = Relationship(feature_t, 'waveform factor:imag part', waveform2)

    r32 = Relationship(feature_f, 'gravity frequency:real part', fc1)
    r33 = Relationship(feature_f, 'gravity frequency:imag part', fc2)
    r34 = Relationship(feature_f, 'mean square frequency:real part', msf1)
    r35 = Relationship(feature_f, 'mean square frequency:imag part', msf2)
    r36 = Relationship(feature_f, 'root mean square frequency:real part', rmsf1)
    r37 = Relationship(feature_f, 'root mean square frequency:imag part', rmsf2)
    r38 = Relationship(feature_f, 'frequency variance:real part', vf1)
    r39 = Relationship(feature_f, 'frequency variance:imag part', vf2)
    r40 = Relationship(feature_f, 'frequency standard deviation:real part', rvf1)
    r41 = Relationship(feature_f, 'frequency standard deviation:imag part', rvf2)


    r44 = Relationship(feature_t, 'minimum:real part', min1)
    r45 = Relationship(feature_t, 'minimum:imag part', min2)
    r46 = Relationship(feature_t, 'kurtosis:real part', kur1)
    r47 = Relationship(feature_t, 'kurtosis:imag part', kur2)
    r48 = Relationship(feature_t, 'peak factor:real part', peakf1)
    r49 = Relationship(feature_t, 'peak factor:imag part', peakf2)
    r50 = Relationship(feature_t, 'pulse factor:real part', impulsef1)
    r51 = Relationship(feature_t, 'pulse factor:imag part', impulsef2)
    r52 = Relationship(feature_t, 'clearance factor:real part', clearancef1)
    r53 = Relationship(feature_t, 'clearance factor:imag part', clearancef2)

    r42 = Relationship(feature_p, 'mean value of spectral kurtosis:real part', skmean1)
    r43 = Relationship(feature_p, 'mean value of spectral kurtosis:imag part', skmean2)
    r54 = Relationship(feature_p, 'standard deviation of spectral kurtosis:real part', skstd1)
    r55 = Relationship(feature_p, 'standard deviation of spectral kurtosis:imag part', skstd2)
    r56 = Relationship(feature_p, 'skewness of spectral kurtosis:real part', skskew1)
    r57 = Relationship(feature_p, 'skewness of spectral kurtosis:imag part', skskew2)
    r58 = Relationship(feature_p, 'kurtosis of spectral kurtosis:real part', skkur1)
    r59 = Relationship(feature_p, 'kurtosis of spectral kurtosis:imag part', skkur2)

    graph.create(r4)
    graph.create(r5)
    graph.create(r6)
    graph.create(r7)
    graph.create(r8)
    graph.create(r9)
    graph.create(r10)
    graph.create(r11)
    graph.create(r12)
    graph.create(r13)
    graph.create(r14)
    graph.create(r15)
    graph.create(r16)
    graph.create(r17)
    graph.create(r18)
    graph.create(r19)
    graph.create(r20)
    graph.create(r21)
    graph.create(r22)
    graph.create(r23)
    graph.create(r24)
    graph.create(r25)
    graph.create(r26)
    graph.create(r27)
    graph.create(r28)
    graph.create(r29)
    graph.create(r30)
    graph.create(r31)

    graph.create(r32)
    graph.create(r33)
    graph.create(r34)
    graph.create(r35)
    graph.create(r36)
    graph.create(r37)
    graph.create(r38)
    graph.create(r39)
    graph.create(r40)
    graph.create(r41)
    graph.create(r42)
    graph.create(r43)

    graph.create(r44)
    graph.create(r45)
    graph.create(r46)
    graph.create(r47)
    graph.create(r48)
    graph.create(r49)
    graph.create(r50)
    graph.create(r51)
    graph.create(r52)
    graph.create(r53)
    graph.create(r54)
    graph.create(r55)
    graph.create(r56)
    graph.create(r57)
    graph.create(r58)
    graph.create(r59)

    print('第 %d 组已生成' %i)
print("Success")